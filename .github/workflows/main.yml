name: Test & Deploy

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "docs/**"
  workflow_dispatch:

jobs:
  test:
    environment: intershipBackend
    name: Run Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      NODE_ENV: test
      ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        with:
          args: >
            - sonar.projectKey=rajwindersxxx_shopping-e-commerce-api
            - sonar.organization=rajwindersxxx
            - sonar.host.url=https://sonarcloud.io
      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Apply schema to DB
        run: npx prisma generate && npx prisma db push

      - name: Seed test data
        run: npm run seed

      - name: Run integration tests
        run: npm test

  deploy:
    environment: intershipBackend-prod
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: test

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: railway up --service backend-api --environment production
